<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iams.system.mapper.SysLogininforMapper">

	<resultMap type="SysLogininfor" id="SysLogininforResult">
		<id     property="infoId"        column="info_id"           />
		<result property="userName"      column="user_name"         />
		<result property="status"        column="status"            />
		<result property="ipaddr"        column="ipaddr"            />
		<result property="loginLocation" column="login_location"    />
		<result property="browser"       column="browser"           />
		<result property="os"            column="os"                />
		<result property="msg"           column="msg"               />
		<result property="loginTime"     column="login_time"        />

		<result property="loginDuration" column="login_duration"    />
	</resultMap>


	<!-- selectLogininforVo 包含所有字段 -->
	<sql id="selectLogininforVo">
		select info_id, user_name, ipaddr, login_location, browser, os, status, msg, login_time, login_duration
		from sys_logininfor
	</sql>

<!--	<insert id="insertLogininfor" parameterType="SysLogininfor">-->
<!--		insert into sys_logininfor (user_name, status, ipaddr, login_location, browser, os, msg, login_time, login_duration)-->
<!--		values (#{userName}, #{status}, #{ipaddr}, #{loginLocation}, #{browser}, #{os}, #{msg},-->
<!--	<choose>-->
<!--		<when test="loginTime != null">#{loginTime}</when>-->
<!--		<otherwise>CURRENT_TIMESTAMP</otherwise>-->
<!--	</choose>,-->
<!--		#{sessionId}, #{loginDuration})-->
<!--	</insert>-->
	<insert id="insertLogininfor" parameterType="SysLogininfor">
		insert into sys_logininfor (
			user_name, ipaddr, login_location, browser, os, status, msg, login_time,  login_duration
		)
		values (
				   #{userName}, #{ipaddr}, #{loginLocation}, #{browser}, #{os}, #{status}, #{msg}, #{loginTime}, #{loginDuration}
			   )
	</insert>

	<select id="selectLogininforList" parameterType="SysLogininfor" resultMap="SysLogininforResult">
		<include refid="selectLogininforVo"/>
		<where>
			<if test="userName != null and userName != ''">
				AND user_name like concat('%', #{userName}, '%')
			</if>
			<if test="ipaddr != null and ipaddr != ''">
				AND ipaddr like concat('%', #{ipaddr}, '%')
			</if>
			<if test="status != null and status != ''">
				AND status = #{status}
			</if>
			<if test="params != null and params.beginTime != null and params.beginTime != ''">
				AND login_time &gt;= #{params.beginTime}
			</if>
			<if test="params != null and params.endTime != null and params.endTime != ''">
				AND login_time &lt;= #{params.endTime}
			</if>
		</where>
		order by info_id desc
	</select>

	<delete id="deleteLogininforByIds" parameterType="Long">
		delete from sys_logininfor where info_id in
		<foreach item="infoId" collection="array" open="(" separator="," close=")">
			#{infoId}
		</foreach>
	</delete>
    
    <update id="cleanLogininfor">
        truncate table sys_logininfor
    </update>

	<select id="selectLastSuccessLoginTime" parameterType="String" resultType="java.util.Date">
		SELECT MAX(login_time)
		FROM sys_logininfor
		WHERE user_name = #{username}
		  AND status = '0'
		  AND (msg = '登录成功' or msg like '用户已连续%')
	</select>

	<!-- 更新登录记录 -->
	<update id="updateLogininfor" parameterType="SysLogininfor">
		update sys_logininfor
		<set>
			<if test="userName != null and userName != ''">user_name = #{userName},</if>
			<if test="ipaddr != null and ipaddr != ''">ipaddr = #{ipaddr},</if>
			<if test="loginLocation != null and loginLocation != ''">login_location = #{loginLocation},</if>
			<if test="browser != null and browser != ''">browser = #{browser},</if>
			<if test="os != null and os != ''">os = #{os},</if>
			<if test="status != null and status != ''">status = #{status},</if>
			<if test="msg != null and msg != ''">msg = #{msg},</if>
			<if test="loginTime != null">login_time = #{loginTime},</if>
			<if test="loginDuration != null">login_duration = #{loginDuration},</if>
		</set>
		where info_id = #{infoId}
	</update>


	<!-- 查询最近的登录记录 -->
	<select id="selectLatestLoginRecord" resultMap="SysLogininforResult">
		<include refid="selectLogininforVo"/>
		where user_name = #{userName} and ipaddr = #{ipaddr}
		and login_time &lt;= #{loginTime}
		and status = '0' and (msg = '登录成功' or msg like '用户已连续%')
		order by login_time desc
		limit 1
	</select>



	<!-- 根据用户名和IP查询最近的登录记录 -->
	<select id="selectLatestLoginByUserAndIp" resultMap="SysLogininforResult">
		<include refid="selectLogininforVo"/>
		where user_name = #{userName} and ipaddr = #{ipaddr} and status = '0'
		and (msg = '登录成功' or msg like '用户已连续%')
		and (login_duration is null or login_duration = 0)
		order by login_time desc
		limit 1
	</select>

	<!-- 查询超时的登录会话 -->
	<select id="selectTimeoutSessions" parameterType="int" resultMap="SysLogininforResult">
		<include refid="selectLogininforVo"/>
		where status = '0' and (msg = '登录成功' or msg like '用户已连续%')
		and login_duration is null
		and login_time &lt; (current_timestamp - interval '#{timeoutMinutes} minutes')
	</select>


	<!-- 查询用户最近的登录成功记录，添加 login_duration 条件 -->
	<select id="selectLatestLoginByUsername" parameterType="String" resultMap="SysLogininforResult">
		SELECT info_id, user_name, ipaddr, login_location, browser, os, status, msg, login_time, login_duration
		FROM sys_logininfor
		WHERE user_name = #{userName}
		  AND status = '0'
		  AND (msg = '登录成功' OR msg LIKE '用户已连续%')
		  AND (login_duration IS NULL OR login_duration = 0)  -- 只查找未计算时长的记录
		ORDER BY login_time DESC
			LIMIT 1
	</select>
    
</mapper> 