<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iams.manage.mapper.DirectoryMapper">
    
    <resultMap type="Directory" id="DirectoryResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="structure"    column="structure"    />
        <result property="createTime"    column="create_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectDirectoryVo">
        select id, name, structure, create_time, create_by, update_time, update_by, remark from tb_directory
    </sql>

    <select id="selectDirectoryList" parameterType="Directory" resultMap="DirectoryResult">
        <include refid="selectDirectoryVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="structure != null  and structure != ''"> and structure like concat('%', CAST(#{structure} AS json), '%')</if>
        </where>
    </select>
    
    <select id="selectDirectoryById" parameterType="Long" resultMap="DirectoryResult">
        <include refid="selectDirectoryVo"/>
        where id = #{id}
    </select>

    <insert id="insertDirectory" parameterType="Directory" useGeneratedKeys="true" keyProperty="id">
        insert into tb_directory
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="structure != null and structure != ''">structure,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="structure != null and structure != ''">CAST(#{structure} AS json),</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateDirectory" parameterType="Directory">
        update tb_directory
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="structure != null and structure != ''">structure = CAST(#{structure} AS json),</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDirectoryById" parameterType="Long">
        delete from tb_directory where id = #{id}
    </delete>

    <delete id="deleteDirectoryByIds" parameterType="String">
        delete from tb_directory where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>