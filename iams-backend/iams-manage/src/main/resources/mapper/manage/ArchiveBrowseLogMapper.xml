<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iams.manage.mapper.ArchiveBrowseLogMapper">

    <resultMap id="ArchiveBrowseLogResult" type="ArchiveBrowseLog">
        <id property="id" column="id" />
        <result property="archiveDanghao" column="archive_danghao" />
        <result property="archiveId" column="archive_id" />
        <result property="archiveName" column="archive_name" />
        <result property="viewerId" column="viewer_id" />
        <result property="viewerName" column="viewer_name" />
        <result property="startTime" column="start_time" />
        <result property="endTime" column="end_time" />
        <result property="duration" column="duration" />
        <result property="createdAt" column="created_at" />
        <result property="documentName" column="document_name" />
        <result property="documentId" column="document_id" />
    </resultMap>

    <sql id="selectArchiveBrowseLogVo">
        SELECT
            id,
            archive_danghao,
            archive_id,
            archive_name,
            viewer_id,
            viewer_name,
            start_time,
            end_time,
        EXTRACT(EPOCH FROM duration)::integer AS duration, <!-- 转换为秒数 -->
            created_at,
            document_name,
            document_id
        FROM tb_archive_browse_log
    </sql>

    <insert id="insertArchiveBrowseLog" parameterType="ArchiveBrowseLog" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO tb_archive_browse_log (
            archive_danghao,
            archive_id,
            archive_name,
            viewer_id,
            viewer_name,
            start_time,
            end_time,
            duration,
            created_at,
            document_name,
            document_id
        ) VALUES (
            #{archiveDanghao},
            #{archiveId},
            #{archiveName},
            #{viewerId},
            #{viewerName},
            #{startTime},
            #{endTime},
            (#{duration} || ' seconds')::interval,
            #{createdAt},
            #{documentName},
            #{documentId}
        )
    </insert>

    <update id="updateArchiveBrowseLog" parameterType="ArchiveBrowseLog">
        UPDATE tb_archive_browse_log
        <set>
            <if test="archiveDanghao != null">archive_danghao = #{archiveDanghao},</if>
            <if test="archiveId != null">archive_id = #{archiveId},</if>
            <if test="archiveName != null">archive_name = #{archiveName},</if>
            <if test="viewerId != null">viewer_id = #{viewerId},</if>
            <if test="viewerName != null">viewer_name = #{viewerName},</if>
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
            <if test="duration != null">duration = (#{duration} || ' seconds')::interval,</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="documentName != null">document_name = #{documentName}</if>
            <if test="documentId != null">document_id = #{documentId},</if>
        </set>
        WHERE id = #{id}
    </update>

    <select id="selectArchiveBrowseLogById" parameterType="Long" resultMap="ArchiveBrowseLogResult">
        <include refid="selectArchiveBrowseLogVo"/>
        WHERE id = #{id}
    </select>

<!--    <select id="selectBrowseLogByDocumentId" parameterType="Long" resultMap="ArchiveBrowseLogResult">-->
<!--        <include refid="selectArchiveBrowseLogVo"/>-->
<!--        WHERE document_id = #{documentId}-->
<!--        ORDER BY start_time DESC-->
<!--    </select>-->

    <select id="selectBrowseLogByDocumentId" parameterType="Long" resultMap="ArchiveBrowseLogResult">
        SELECT
            id,
            archive_danghao,
            archive_id,
            archive_name,
            viewer_id,
            viewer_name,
            start_time,
            end_time,
            EXTRACT(EPOCH FROM duration)::integer AS duration,
            created_at,
            document_name,
            document_id
        FROM tb_archive_browse_log
        WHERE document_id = #{documentId}
        ORDER BY start_time DESC
    </select>

    <!-- 修改Mapper XML中的查询语句 -->
    <select id="selectBrowseLogByArchiveId" parameterType="Long" resultMap="ArchiveBrowseLogResult">
        SELECT
            id,
            archive_danghao,
            archive_id,
            archive_name,
            viewer_id,
            viewer_name,
            start_time,
            end_time,
            EXTRACT(EPOCH FROM duration)::integer AS duration,
            created_at,
            document_name,
            document_id
        FROM tb_archive_browse_log
        WHERE archive_id = #{archiveId}
        ORDER BY start_time DESC
    </select>

    <select id="selectBrowseLogByViewerId" parameterType="Long" resultMap="ArchiveBrowseLogResult">
        <include refid="selectArchiveBrowseLogVo"/>
        WHERE viewer_id = #{viewerId}
        ORDER BY start_time DESC
    </select>

    <delete id="deleteArchiveBrowseLogById" parameterType="Long">
        DELETE FROM tb_archive_browse_log WHERE id = #{id}
    </delete>

    <delete id="deleteArchiveBrowseLogByIds" parameterType="Long">
        DELETE FROM tb_archive_browse_log WHERE id IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>